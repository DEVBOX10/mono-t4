{
  "license": "Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.",
  "intellisenseImports": [
    "$(MSBuildBinPath)\\Microsoft.Common.CurrentVersion.targets"
  ],
  "items": {
    "T4ReferencePath": {
      "description": "Additional folders to search for T4 references",
      "kind": "folder"
    },
    "T4IncludePath": {
      "description": "Additional folders to search for T4 includes",
      "kind": "folder"
    },
    "T4ParameterValues": {
      "description": "[Deprecated] T4 key-value property to pass to T4 templates. Legacy alternative to `@(T4Argument)`.",
      "includeDescription": "T4 property keys",
      "metadata": {
        "Value": "The T4 property value"
      }
    },
    "T4Argument": {
      "description": "T4 key-value property to pass to T4 templates",
      "includeDescription": "T4 property keys",
      "metadata": {
        "Value": "The T4 property value"
      }
    },
    "T4Transform": {
      "description": "Files to be transformed using the T4 engine",
      "kind": "file"
    },
    "T4Preprocess": {
      "description": "Files to be preprocessed using the T4 engine",
      "kind": "file"
    },
    "DirectiveProcessor": {
      "description": "A T4 directive processor",
      "metadata": {
        "Class": "Fully qualified name of the processor class",
        "Assembly": {
          "description": "Location of the assembly containing the processor",
          "kind": "file"
        },
        "Codebase": {
          "description": "[Deprecated] Alias for `%(Assembly)`, the location of the assembly containing the processor",
          "kind": "file"
        }
      }
    },
    "T4AssemblyReference": {
      "description": "Assemblies to be referenced by T4 templates",
      "kind": "file"
    },
    "T4RequiredAssemblies": {
      "description": "After running the Transform target, the assemblies that must be referenced to compile the preprocessed templates",
      "kind": "file"
    },
    "GeneratedTemplateOutput": {
      "description": "After running the Transform target, the output of all tranformed templates",
      "kind": "file"
    },
    "PreprocessedTemplateOutput": {
      "description": "After running the Transform target, the output of all preprocessed templates",
      "kind": "file"
    }
  },
  "metadata": [
    {
      "#": "Metadata that controls how a specific template is processed",
      "$appliesTo": [ "None", "Compile", "Content", "EmbeddedResource", "T4Transform", "T4Preprocess" ],
      "OutputFilePath": {
        "description": "Overrides the output folder for a T4 template. Note that Visual Studio does not respect this.",
        "kind": "folder"
      },
      "OutputFileName": {
        "description": "Overrides the output filename for a T4 template. Note that Visual Studio does not respect this.",
        "kind": "filename"
      }
    }
  ],
  "properties": {
    "TransformOnBuild": {
      "description": "Automatically transform T4 templates on build.",
      "kind": "bool",
      "default": "false"
    },
    "TransformOutOfDateOnly": {
      "description": "Only transform out of date T4 templates",
      "kind": "bool",
      "default": "true"
    },
    "TransformFile": {
      "description": "The T4 files to transform when running the Transform target",
      "kind": "file-list"
    },
    "BeforeTransform": {
      "description": "Targets to run before the T4 Transform target",
      "kind": "target-list"
    },
    "AfterTransform": {
      "description": "Targets to run after the T4 Transform target",
      "kind": "target-list"
    },
    "IncludeFolders": {
      "description": "[Deprecated] Additional folders to search for T4 includes. Legacy alternative to `@(T4IncludePath)`.",
      "kind": "folder-list"
    },
    "T4DefaultNamespace": {
      "description": "Default namespace for preprocessed templates. Defaults to `$(RootNamespace)`."
    },
    "PreprocessTemplateDefaultNamespace": {
      "description": "[Deprecated] Default namespace for preprocessed templates. Defaults to `$(RootNamespace)`.  Legacy alternative to `$(T4DefaultNamespace)`."
    },
    "UseLegacyT4Preprocessing": {
      "description": "Place preprocessed templates beside the templates instead of dynamically injecting them into the build.",
      "kind": "bool",
      "default": "false"
    },
    "T4Arguments": {
      "description": "Semicolon-separated list of values to convert to `@(T4Argument)` items. Intended to be used from command-line invocations only.",
      "includeDescription": "T4 property keys",
      "metadata": {
        "Value": "The T4 property value"
      }
    }
  },
  "targets": {
    "TransformTemplates": "Transform T4 templates. If `$(TransformFile)` is set, only the templates listed in it will be transformed."
  }
}